{
  "api": {
    "Exception.ts": {
      "functions": [
        {
          "name": "getExceptionMessage",
          "exported": true,
          "externalCalls": 0
        }
      ]
    },
    "interfaces": {
      "IAbstractOperator.ts": {},
      "IAbstractValue.ts": {},
      "IArray.ts": {},
      "IDebugSource.ts": {},
      "IDictionary.ts": {},
      "IMemoryTracker.ts": {},
      "IReadOnlyArray.ts": {
        "functions": [
          {
            "name": "enumIArrayValues",
            "exported": true,
            "externalCalls": 0
          }
        ]
      },
      "IReadOnlyCallStack.ts": {},
      "IReadOnlyDictionary.ts": {
        "functions": [
          {
            "name": "enumIDictionaryValues",
            "exported": true,
            "externalCalls": 0,
            "internalCalls": 1
          },
          {
            "name": "convertIDictionaryToObject",
            "exported": true,
            "calls": {
              "enumIDictionaryValues": 1
            },
            "externalCalls": 0
          }
        ]
      },
      "IState.ts": {},
      "IValueTracker.ts": {}
    },
    "parser.ts": {
      "functions": [
        {
          "name": "parseString",
          "exported": false,
          "internalCalls": 1
        },
        {
          "name": "parseNumber",
          "exported": false,
          "calls": {
            "assert": 1
          },
          "internalCalls": 1
        },
        {
          "name": "parseName",
          "exported": false,
          "calls": {
            "assert": 3
          },
          "internalCalls": 1
        },
        {
          "name": "parse",
          "exported": true,
          "calls": {
            "assert": 1,
            "parseString": 1,
            "parseNumber": 1,
            "parseName": 1
          },
          "externalCalls": 3
        }
      ]
    },
    "Result.ts": {},
    "run.ts": {
      "classes": [
        {
          "name": "RunError",
          "extends": "Error",
          "exported": true,
          "methods": [
            {
              "name": "constructor"
            },
            {
              "name": "exception",
              "kind": "get"
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "run",
          "exported": true,
          "calls": {
            "toStringValue": 1
          },
          "externalCalls": 0
        }
      ]
    },
    "values": {
      "ArrayValue.ts": {},
      "BooleanValue.ts": {},
      "DictionaryValue.ts": {},
      "IntegerValue.ts": {},
      "MarkValue.ts": {},
      "NameValue.ts": {},
      "NullValue.ts": {},
      "OperatorValue.ts": {},
      "StringValue.ts": {},
      "Value.ts": {},
      "ValueType.ts": {}
    }
  },
  "core": {
    "MemoryTracker.ts": {
      "classes": [
        {
          "name": "MemoryTracker",
          "exported": true,
          "methods": [
            {
              "name": "experimentalGarbageCollector",
              "kind": "get"
            },
            {
              "name": "constructor"
            },
            {
              "name": "isAvailable",
              "calls": {
                "assert": 2,
                "memorySizeToBytes": 1
              }
            },
            {
              "name": "allocate",
              "calls": {
                "assert": 1
              }
            },
            {
              "name": "release"
            },
            {
              "name": "register",
              "calls": {
                "assert": 3
              }
            },
            {
              "name": "enumContainersAllocations"
            },
            {
              "name": "addStringRef",
              "calls": {
                "stringSizer": 1,
                "memorySizeToBytes": 1
              }
            },
            {
              "name": "releaseString",
              "calls": {
                "assert": 1,
                "stringSizer": 1,
                "memorySizeToBytes": 1
              }
            },
            {
              "name": "used",
              "kind": "get"
            },
            {
              "name": "peak",
              "kind": "get"
            },
            {
              "name": "total",
              "kind": "get"
            },
            {
              "name": "byType",
              "kind": "get"
            },
            {
              "name": "snapshot",
              "calls": {
                "stringSizer": 1
              }
            },
            {
              "name": "addValueRef",
              "calls": {
                "valuesOf": 1,
                "assert": 3
              }
            },
            {
              "name": "releaseValue",
              "calls": {
                "valuesOf": 1,
                "assert": 1
              }
            },
            {
              "name": "collectGarbage"
            },
            {
              "name": "addToGarbageCollectorQueue"
            },
            {
              "name": "hasGarbageToCollect",
              "kind": "get"
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "stringSizer",
          "exported": false,
          "internalCalls": 3
        },
        {
          "name": "addMemorySize",
          "exported": true,
          "externalCalls": 4
        },
        {
          "name": "memorySizeToBytes",
          "exported": true,
          "externalCalls": 0,
          "internalCalls": 3
        }
      ]
    },
    "objects": {
      "AbstractValueContainer.ts": {
        "classes": [
          {
            "name": "AbstractValueContainer",
            "extends": "ShareableObject",
            "exported": true,
            "methods": [
              {
                "name": "_toValue"
              },
              {
                "name": "toValue",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "constructor",
                "calls": {
                  "assert": 3
                }
              },
              {
                "name": "createInstance",
                "calls": {
                  "assert": 2
                }
              },
              {
                "name": "getSize",
                "calls": {
                  "addMemorySize": 1
                }
              },
              {
                "name": "getIncrementSize"
              },
              {
                "name": "memoryTracker",
                "kind": "get"
              },
              {
                "name": "memoryType",
                "kind": "get"
              },
              {
                "name": "length",
                "kind": "get"
              },
              {
                "name": "at"
              },
              {
                "name": "capacity",
                "kind": "get"
              },
              {
                "name": "reserve",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "increaseCapacityIfNeeded"
              },
              {
                "name": "_push"
              },
              {
                "name": "push"
              },
              {
                "name": "collectGarbage"
              },
              {
                "name": "reduceCapacityIfNeeded"
              },
              {
                "name": "_pop"
              },
              {
                "name": "pop"
              },
              {
                "name": "swap",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "popush"
              },
              {
                "name": "clear"
              },
              {
                "name": "_dispose"
              }
            ]
          }
        ]
      },
      "dictionaries": {
        "Dictionary.ts": {
          "classes": [
            {
              "name": "Dictionary",
              "extends": "ShareableObject",
              "exported": true,
              "methods": [
                {
                  "name": "toValue",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "constructor",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "getSize",
                  "calls": {
                    "addMemorySize": 1
                  }
                },
                {
                  "name": "create"
                },
                {
                  "name": "names",
                  "kind": "get"
                },
                {
                  "name": "lookup"
                },
                {
                  "name": "_checkInitialCapacityUsage"
                },
                {
                  "name": "_getNewValueSlot"
                },
                {
                  "name": "def",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "collectGarbage"
                },
                {
                  "name": "_dispose"
                }
              ]
            }
          ]
        },
        "Empty.ts": {
          "classes": [
            {
              "name": "EmptyDictionary",
              "exported": true,
              "methods": [
                {
                  "name": "constructor"
                },
                {
                  "name": "instance",
                  "kind": "get"
                },
                {
                  "name": "names",
                  "kind": "get"
                },
                {
                  "name": "lookup"
                },
                {
                  "name": "def",
                  "calls": {
                    "assert": 2
                  }
                }
              ]
            }
          ]
        },
        "System.ts": {
          "classes": [
            {
              "name": "SystemDictionary",
              "exported": true,
              "methods": [
                {
                  "name": "constructor"
                },
                {
                  "name": "instance",
                  "kind": "get"
                },
                {
                  "name": "names",
                  "kind": "get"
                },
                {
                  "name": "lookup"
                }
              ]
            }
          ]
        }
      },
      "ShareableObject.ts": {
        "classes": [
          {
            "name": "ShareableObject",
            "exported": true,
            "methods": [
              {
                "name": "constructor"
              },
              {
                "name": "refCount",
                "kind": "get"
              },
              {
                "name": "addRef"
              },
              {
                "name": "release",
                "calls": {
                  "assert": 1
                }
              }
            ]
          }
        ],
        "functions": [
          {
            "name": "getShareableObject",
            "exported": false,
            "calls": {
              "assert": 1
            }
          }
        ]
      },
      "stacks": {
        "CallStack.ts": {
          "classes": [
            {
              "name": "CallStack",
              "extends": "ValueStack",
              "exported": true,
              "methods": [
                {
                  "name": "create",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "getSize",
                  "calls": {
                    "addMemorySize": 1
                  }
                },
                {
                  "name": "getIncrementSize",
                  "calls": {
                    "addMemorySize": 1
                  }
                },
                {
                  "name": "pushImpl"
                },
                {
                  "name": "popImpl"
                },
                {
                  "name": "snapshot"
                },
                {
                  "name": "operatorStateAt"
                },
                {
                  "name": "names",
                  "kind": "get"
                },
                {
                  "name": "lookup"
                },
                {
                  "name": "def"
                },
                {
                  "name": "topOperatorState",
                  "calls": {
                    "assert": 1
                  },
                  "kind": "get"
                },
                {
                  "name": "topOperatorState",
                  "calls": {
                    "assert": 1
                  },
                  "kind": "set"
                },
                {
                  "name": "resetTopOperatorState"
                }
              ]
            }
          ]
        },
        "DictionaryStack.ts": {
          "classes": [
            {
              "name": "DictionaryStack",
              "extends": "ValueStack",
              "exported": true,
              "methods": [
                {
                  "name": "create",
                  "calls": {
                    "assert": 2
                  }
                },
                {
                  "name": "constructor"
                },
                {
                  "name": "getDictionaryValue",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "setHost"
                },
                {
                  "name": "setGlobal",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "setUser",
                  "calls": {
                    "assert": 1
                  }
                },
                {
                  "name": "top",
                  "kind": "get"
                },
                {
                  "name": "host",
                  "kind": "get"
                },
                {
                  "name": "system",
                  "kind": "get"
                },
                {
                  "name": "global",
                  "kind": "get"
                },
                {
                  "name": "user",
                  "kind": "get"
                },
                {
                  "name": "begin"
                },
                {
                  "name": "end"
                },
                {
                  "name": "where"
                },
                {
                  "name": "lookup"
                }
              ]
            }
          ]
        },
        "ValueStack.ts": {
          "classes": [
            {
              "name": "ValueStack",
              "extends": "AbstractValueContainer",
              "exported": true,
              "methods": [
                {
                  "name": "create"
                },
                {
                  "name": "top",
                  "kind": "get"
                },
                {
                  "name": "pushImpl"
                },
                {
                  "name": "popImpl"
                }
              ]
            }
          ]
        }
      },
      "ValueArray.ts": {
        "classes": [
          {
            "name": "ValueArray",
            "extends": "AbstractValueContainer",
            "exported": true,
            "methods": [
              {
                "name": "create"
              },
              {
                "name": "toValue",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "pushImpl"
              },
              {
                "name": "popImpl"
              },
              {
                "name": "set"
              }
            ]
          }
        ]
      }
    },
    "operators": {
      "array": {
        "aload.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1
              }
            }
          ]
        },
        "closeArray.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "closeToMark": 1
              }
            }
          ]
        },
        "openArray.ts": {
          "calls": {
            "buildFunctionOperator": 1
          }
        }
      },
      "boolean": {
        "and.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "or.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "xor.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        }
      },
      "dictionary": {
        "closeDictionary.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "findMarkPos": 1,
                "valuesOf": 1,
                "pushOpenClosedValueWithDebugInfo": 1
              }
            }
          ]
        },
        "openDictionary.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "openWithMark": 1
              }
            }
          ]
        }
      },
      "exceptions": {
        "dictStackUnderflow.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "invalidAccess.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "limitcheck.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "rangeCheck.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "stackUnderflow.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "stop.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "typeCheck.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "undefined.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "undefinedResult.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "unmatchedMark.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "vmOverflow.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        }
      },
      "flow": {
        "closeBlock.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "closeToMark": 1
              }
            }
          ]
        },
        "finally.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "firstCall",
              "exported": false,
              "calls": {
                "assert": 1
              },
              "internalCalls": 1
            },
            {
              "name": "callBeforePop",
              "exported": false,
              "calls": {
                "toStringValue": 1,
                "assert": 2
              },
              "internalCalls": 1
            },
            {
              "name": "popping",
              "exported": false,
              "calls": {
                "assert": 2
              },
              "internalCalls": 1
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "firstCall": 1,
                "callBeforePop": 1,
                "assert": 1,
                "popping": 1
              }
            }
          ]
        },
        "gc.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1
              }
            }
          ]
        },
        "if.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "ifelse.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "loop.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1
              }
            }
          ]
        },
        "openBlock.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "openWithMark": 1
              }
            }
          ]
        },
        "repeat.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "firstCall",
              "exported": false,
              "internalCalls": 1
            },
            {
              "name": "repeat",
              "exported": false,
              "internalCalls": 1
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "firstCall": 1,
                "repeat": 1
              }
            }
          ]
        },
        "stopped.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1
              }
            }
          ]
        }
      },
      "integer": {
        "abs.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 1
              }
            }
          ]
        },
        "add.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 1
              }
            }
          ]
        },
        "div.ts": {
          "calls": {
            "assert": 2,
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 2,
                "assert": 2
              }
            }
          ]
        },
        "gt.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "gte.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "lt.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "lte.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "mul.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 1
              }
            }
          ]
        },
        "sub.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 1
              }
            }
          ]
        }
      },
      "openClose.ts": {
        "functions": [
          {
            "name": "openWithMark",
            "exported": true,
            "externalCalls": 2
          },
          {
            "name": "pushOpenClosedValueWithDebugInfo",
            "exported": true,
            "externalCalls": 1,
            "internalCalls": 1
          },
          {
            "name": "closeToMark",
            "exported": true,
            "calls": {
              "findMarkPos": 1,
              "toIntegerValue": 1,
              "assert": 4,
              "pushOpenClosedValueWithDebugInfo": 1
            },
            "externalCalls": 2
          }
        ]
      },
      "operators.ts": {
        "functions": [
          {
            "name": "buildFunctionOperator",
            "exported": true,
            "calls": {
              "assert": 1
            },
            "externalCalls": 68
          },
          {
            "name": "buildConstantOperator",
            "exported": true,
            "externalCalls": 4
          }
        ]
      },
      "stacks": {
        "call": {
          "countexecstack.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "toIntegerValue": 1,
                  "assert": 1
                }
              }
            ]
          }
        },
        "dictionary": {
          "begin.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "bind.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "bindName",
                "exported": false,
                "internalCalls": 1
              },
              {
                "name": "bindArray",
                "exported": false,
                "internalCalls": 1
              },
              {
                "name": "bindValue",
                "exported": false,
                "calls": {
                  "bindName": 1,
                  "assert": 1,
                  "bindArray": 1
                },
                "internalCalls": 1
              },
              {
                "name": "bind",
                "exported": true,
                "externalCalls": 0
              },
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "assert": 2,
                  "bindValue": 1
                }
              }
            ]
          },
          "countdictstack.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "toIntegerValue": 1,
                  "assert": 1
                }
              }
            ]
          },
          "currentdict.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "def.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "end.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "globaldict.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "hostdict.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "systemdict.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "userdict.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          }
        },
        "operand": {
          "clear.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "cleartomark.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "findMarkPos": 1
                }
              }
            ]
          },
          "count.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "toIntegerValue": 1,
                  "assert": 1
                }
              }
            ]
          },
          "counttomark.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "findMarkPos": 1,
                  "toIntegerValue": 1,
                  "assert": 1
                }
              }
            ]
          },
          "dup.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "exch.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "indexOp.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "pop.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "pop",
                "exported": true,
                "externalCalls": 0
              },
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "roll.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "initialize",
                "exported": false,
                "calls": {
                  "toIntegerValue": 2,
                  "assert": 2
                },
                "internalCalls": 1
              },
              {
                "name": "roll",
                "exported": false,
                "calls": {
                  "assert": 5,
                  "toIntegerValue": 1
                },
                "internalCalls": 1
              },
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "initialize": 1,
                  "roll": 1
                }
              }
            ]
          }
        }
      },
      "value": {
        "convert": {
          "cvi.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "toIntegerValue": 1
                }
              }
            ]
          },
          "cvlit.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false
              }
            ]
          },
          "cvn.ts": {
            "calls": {
              "buildFunctionOperator": 1
            },
            "functions": [
              {
                "name": "(anonymous arrow)",
                "exported": false,
                "calls": {
                  "assert": 1,
                  "toNameValue": 1
                }
              }
            ]
          }
        },
        "eq.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "valuesOf": 1
              }
            }
          ]
        },
        "false.ts": {
          "calls": {
            "buildConstantOperator": 1
          }
        },
        "get.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1,
                "checkPos": 1,
                "toStringValue": 1
              }
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "checkPos": 1
              }
            },
            {
              "name": "(anonymous arrow)",
              "exported": false
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "implementation": 1
              }
            }
          ]
        },
        "length.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            },
            {
              "name": "(anonymous arrow)",
              "exported": false
            },
            {
              "name": "(anonymous arrow)",
              "exported": false
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toIntegerValue": 1,
                "assert": 1
              }
            }
          ]
        },
        "mark.ts": {
          "calls": {
            "buildConstantOperator": 1
          }
        },
        "neq.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "valuesOf": 1
              }
            }
          ]
        },
        "put.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "assert": 1,
                "checkPos": 1,
                "toStringValue": 1
              }
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "checkPos": 1
              }
            },
            {
              "name": "(anonymous arrow)",
              "exported": false
            },
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "implementation": 1
              }
            }
          ]
        },
        "true.ts": {
          "calls": {
            "buildConstantOperator": 1
          }
        },
        "type.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false,
              "calls": {
                "toNameValue": 1
              }
            }
          ]
        },
        "version.ts": {
          "calls": {
            "buildConstantOperator": 1
          }
        },
        "wcheck.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        },
        "xcheck.ts": {
          "calls": {
            "buildFunctionOperator": 1
          },
          "functions": [
            {
              "name": "(anonymous arrow)",
              "exported": false
            }
          ]
        }
      }
    },
    "state": {
      "block.ts": {
        "functions": [
          {
            "name": "blockCycle",
            "exported": true,
            "externalCalls": 1
          }
        ]
      },
      "call.ts": {
        "functions": [
          {
            "name": "callCycle",
            "exported": true,
            "externalCalls": 1
          }
        ]
      },
      "operator.ts": {
        "functions": [
          {
            "name": "operatorPop",
            "exported": true,
            "externalCalls": 1,
            "internalCalls": 1
          },
          {
            "name": "handleFunctionOperatorTypeCheck",
            "exported": false,
            "calls": {
              "assert": 2
            },
            "internalCalls": 1
          },
          {
            "name": "handleFunctionOperator",
            "exported": false,
            "calls": {
              "assert": 1,
              "handleFunctionOperatorTypeCheck": 1
            },
            "internalCalls": 1
          },
          {
            "name": "operatorCycle",
            "exported": true,
            "calls": {
              "operatorPop": 1,
              "handleFunctionOperator": 1
            },
            "externalCalls": 1
          }
        ]
      },
      "parse.ts": {
        "functions": [
          {
            "name": "getToken",
            "exported": false,
            "calls": {
              "parse": 2
            },
            "internalCalls": 1
          },
          {
            "name": "enqueueToken",
            "exported": false,
            "calls": {
              "valuesOf": 1
            },
            "internalCalls": 1
          },
          {
            "name": "parseCycle",
            "exported": true,
            "calls": {
              "getToken": 1,
              "enqueueToken": 1
            },
            "externalCalls": 1
          }
        ]
      },
      "State.ts": {
        "classes": [
          {
            "name": "State",
            "exported": true,
            "methods": [
              {
                "name": "constructor"
              },
              {
                "name": "create"
              },
              {
                "name": "destroyed",
                "kind": "get"
              },
              {
                "name": "_checkIfDestroyed",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "_resetException"
              },
              {
                "name": "idle",
                "kind": "get"
              },
              {
                "name": "memoryTracker",
                "kind": "get"
              },
              {
                "name": "operands",
                "kind": "get"
              },
              {
                "name": "dictionaries",
                "kind": "get"
              },
              {
                "name": "callEnabled",
                "kind": "get"
              },
              {
                "name": "exception",
                "kind": "get"
              },
              {
                "name": "exceptionStack",
                "kind": "get"
              },
              {
                "name": "exec"
              },
              {
                "name": "destroy",
                "calls": {
                  "assert": 1
                }
              },
              {
                "name": "raiseException",
                "calls": {
                  "assert": 4
                }
              },
              {
                "name": "clearException"
              },
              {
                "name": "calls",
                "kind": "get"
              },
              {
                "name": "allowCall"
              },
              {
                "name": "preventCall"
              },
              {
                "name": "run"
              },
              {
                "name": "cycle",
                "calls": {
                  "operatorPop": 1,
                  "operatorCycle": 1,
                  "callCycle": 1,
                  "blockCycle": 1,
                  "parseCycle": 1,
                  "assert": 1
                }
              }
            ]
          }
        ]
      }
    }
  },
  "sdk": {
    "assert.ts": {
      "classes": [
        {
          "name": "AssertionFailed",
          "extends": "Error",
          "exported": false,
          "methods": [
            {
              "name": "constructor"
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "assert",
          "exported": true,
          "externalCalls": 87
        }
      ]
    },
    "checkPos.ts": {
      "functions": [
        {
          "name": "checkPos",
          "exported": true,
          "externalCalls": 4
        }
      ]
    },
    "checks": {
      "isObject.ts": {
        "functions": [
          {
            "name": "isObject",
            "exported": true,
            "externalCalls": 1
          }
        ]
      },
      "isValue.ts": {
        "functions": [
          {
            "name": "hasInvalidFlag",
            "exported": false,
            "internalCalls": 1
          },
          {
            "name": "checkFlags",
            "exported": false,
            "internalCalls": 1
          },
          {
            "name": "is",
            "exported": false,
            "calls": {
              "isObject": 1,
              "hasInvalidFlag": 1,
              "checkFlags": 1,
              "check": 1
            },
            "internalCalls": 6
          },
          {
            "name": "isInteger",
            "exported": false,
            "internalCalls": 1
          },
          {
            "name": "isIntegerValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          },
          {
            "name": "isStringValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          },
          {
            "name": "isNameValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          },
          {
            "name": "isOperatorValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          },
          {
            "name": "isFunction",
            "exported": false
          },
          {
            "name": "isPositiveInteger",
            "exported": false,
            "calls": {
              "isInteger": 1
            }
          },
          {
            "name": "isArrayValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          },
          {
            "name": "isDictionaryValue",
            "exported": true,
            "calls": {
              "is": 1
            },
            "externalCalls": 0
          }
        ]
      }
    },
    "findMarkPos.ts": {
      "functions": [
        {
          "name": "findMarkPos",
          "exported": true,
          "externalCalls": 4
        }
      ]
    },
    "interfaces": {
      "ICallStack.ts": {},
      "IDictionaryStack.ts": {},
      "IInternalState.ts": {},
      "IOperandStack.ts": {},
      "IOperator.ts": {},
      "IStack.ts": {}
    },
    "toString.ts": {
      "functions": [
        {
          "name": "convertPosToLineAndCol",
          "exported": false,
          "internalCalls": 1
        },
        {
          "name": "minimizeAt",
          "exported": false,
          "internalCalls": 1
        },
        {
          "name": "centerValue",
          "exported": false,
          "internalCalls": 1
        },
        {
          "name": "fitToMaxWidth",
          "exported": false,
          "calls": {
            "minimizeAt": 1,
            "centerValue": 1
          },
          "internalCalls": 1
        },
        {
          "name": "decorate",
          "exported": false,
          "calls": {
            "convertPosToLineAndCol": 1,
            "fitToMaxWidth": 1
          },
          "internalCalls": 9
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "parse": 1,
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "(anonymous arrow)",
          "exported": false,
          "calls": {
            "decorate": 1
          }
        },
        {
          "name": "valueToString",
          "exported": true,
          "externalCalls": 0,
          "internalCalls": 1
        },
        {
          "name": "callStackToString",
          "exported": true,
          "calls": {
            "valueToString": 1
          },
          "externalCalls": 0
        }
      ]
    },
    "toValue.ts": {
      "functions": [
        {
          "name": "toIntegerValue",
          "exported": true,
          "externalCalls": 16
        },
        {
          "name": "toStringValue",
          "exported": true,
          "externalCalls": 4
        },
        {
          "name": "toNameValue",
          "exported": true,
          "externalCalls": 2
        }
      ]
    },
    "valuesOf.ts": {
      "functions": [
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "(anonymous arrow)",
          "exported": false
        },
        {
          "name": "getValueOf",
          "exported": false,
          "internalCalls": 1
        },
        {
          "name": "valuesOf",
          "exported": true,
          "calls": {
            "getValueOf": 1
          },
          "externalCalls": 6
        }
      ]
    }
  }
}